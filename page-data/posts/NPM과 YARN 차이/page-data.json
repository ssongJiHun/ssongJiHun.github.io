{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/NPM과 YARN 차이/","result":{"data":{"markdownRemark":{"html":"<p>지금까지 두 곳의 회사를 다니면서, 프론트엔드의 기술 스택은 <code class=\"language-text\">React</code>와 <code class=\"language-text\">Vue</code>를 사용했다.</p>\n<p>첫 회사는 <code class=\"language-text\">React</code>와 <code class=\"language-text\">Yarn</code>, 두번째 지금 현재의 회사는 <code class=\"language-text\">Vue</code>와 <code class=\"language-text\">NPM</code>을 사용한다.</p>\n<p>두 개의 프레임워크와 <strong>패키지 매니저</strong>를 사용해보면서 차이점을 적어 볼려고 한다.</p>\n<ul>\n<li>Node.js는 자바스크립트를 실행시켜주는 엔진이다.</li>\n<li>Node.js를 설치하게되면 자동으로 <code class=\"language-text\">npx</code>와 <code class=\"language-text\">NPM</code>이 자동으로 설치된다.</li>\n<li>해당 프로젝트에 패키지 매니저를 설치하게되면 <code class=\"language-text\">node_modules</code> 폴더가  생성된다.</li>\n</ul>\n<h3 id=\"-자바스크립트-패키지-매니저란\" style=\"position:relative;\"><a href=\"#-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80%EB%9E%80\" aria-label=\" 자바스크립트 패키지 매니저란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌 자바스크립트 패키지 매니저란?</h3>\n<ul>\n<li>패키지란 npm에 업로드된 노드 모듈을 말한다.</li>\n<li>하나의 패키지가 다른 패키지를 사용할 경우 의존 관계를 가지기도 한다.</li>\n<li>패키지를 프로젝트에서 사용는 패키지는 의존성 모듈이라고 불리기도 한다.</li>\n</ul>\n<p>NPM에 등록되어 있는 패키지들을 다운로드, 설치, 업데이트 및 관리 등 많은 과정들을 자동화하여 편리하고 안전하게 수행할 수 있도록 해준다.</p>\n<blockquote>\n<p>NPM Yarn은 Node PackageManager이다. </br> 차이점을 찾아보기 위해 구글링을 시도해봤다.</p>\n</blockquote>\n<h3 id=\"-npm-packagemanager\" style=\"position:relative;\"><a href=\"#-npm-packagemanager\" aria-label=\" npm packagemanager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌 NPM PackageManager</h3>\n<p>자바스크립트 런타임 환경 Node.js의 **‘기본 패키지 관리자’**이다. 세계의 많은 개발자들이 공유한다.</p>\n<h3 id=\"-yarn-packagemanager\" style=\"position:relative;\"><a href=\"#-yarn-packagemanager\" aria-label=\" yarn packagemanager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌 Yarn PackageManager</h3>\n<p>Yarn은 2016년 페이스북에서 개발한 페키지 관리자이다. 그 당시 Npm을 이용한 패키지 버전 관리가 어려움이 있었고, 불안정성을 해소하기 위해 개발되었다고 한다.</p>\n<h3 id=\"-그래서-npm과-yarn의-차이점이-뭐야\" style=\"position:relative;\"><a href=\"#-%EA%B7%B8%EB%9E%98%EC%84%9C-npm%EA%B3%BC-yarn%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%B4-%EB%AD%90%EC%95%BC\" aria-label=\" 그래서 npm과 yarn의 차이점이 뭐야 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌 그래서 Npm과 Yarn의 차이점이 뭐야??</h3>\n<h4 id=\"1-속도\" style=\"position:relative;\"><a href=\"#1-%EC%86%8D%EB%8F%84\" aria-label=\"1 속도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 속도</h4>\n<p>여러개의 의존성 모듈 설치 프로세스 처리하는 방식이 다르다.\r\n<strong>NPM은 한 번에 하나씩 순차적</strong>으로 설치한다.\r\n<strong>YARN은 동시에 설치</strong>를 진행하도록한다.\r\n<code class=\"language-text\">NPM5.0</code> 버전부터는 YARN과 <strong>속도 차이가 거의 없다</strong>는 견해도 있다.</p>\n<h4 id=\"2-공유성\" style=\"position:relative;\"><a href=\"#2-%EA%B3%B5%EC%9C%A0%EC%84%B1\" aria-label=\"2 공유성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 공유성</h4>\n<p>다수의 개발자들이 개발에 함께 참여하게되는 상황에서 모든 개발자들이 동일한 개발 환경을 가지는 것이 중요합니다.\r\n이를 위해 <code class=\"language-text\">package.json</code>파일을 통해 버전을 공유합니다.\r\n하지만 <code class=\"language-text\">package.json</code>의 범위 지정 방식은 패키지를 가장 최근의 버전의 패키지를 설치하기에 이슈가 발생할 확률이 높습니다.\r\n<strong>Yarn은 이를 해결하기 위해 <code class=\"language-text\">yarn.lock</code> 파일을 통해 정확하게 버전 정보</strong>를 추적합니다.\r\n<strong>NPM5.0</strong>버전부터는 버전 공유성 이슈를 해결하기 위해서 <code class=\"language-text\">package-lock.json</code> 파일로 사용하고있는 모든 패키지들의 정확한 버전 정보를 추적할 수 있어 안정성 문제도 해결됐습니다.</p>\n<h4 id=\"3-보안성\" style=\"position:relative;\"><a href=\"#3-%EB%B3%B4%EC%95%88%EC%84%B1\" aria-label=\"3 보안성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 보안성</h4>\n<p>가장 중요한 부분이라고 생각할 수도 있습니다. NPM의 장점으로서 뽑히는 의존성이 있는 패키지들을 포함될 수 있도록 하는 코드를 자동으로 실행합니다.\r\n이는 추후 큰 문제를 야기할 수 있는 가능성이 있습니다.\r\n반면에 Yarn은 <code class=\"language-text\">yarn.lock</code> 과 <code class=\"language-text\">package.json</code> 파일에 존재하는 패키지들만 설치를 진행합니다.</p>\n<h3 id=\"그래서-결론은-뭔데\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EA%B2%B0%EB%A1%A0%EC%9D%80-%EB%AD%94%EB%8D%B0\" aria-label=\"그래서 결론은 뭔데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서 결론은 뭔데???</h3>\n<p>NPM과 Yarn은 디스크 용량 등 추가적인 차이점이 존재하고 각각의 장단점이 존재하지만, 아직까지는 Yarn이 현업에서 사용하기에는 조금 더 편리한 감이 있는 것 같습니다.\r\nNPM도 지속적으로 업데이트를 하고 있어서 Yarn과 차이는 점차 좁혀질 것으로 생각이 듭니다.\r\n이는 앞으로 NPM이냐 Yarn이냐의 선택은 어떤 패키지 매니저가 <strong>최적화</strong>를 잘해주냐에 달린 것 같다고 조심스럽게 생각해봅니다…</p>\n<h3 id=\"-다음-할-일\" style=\"position:relative;\"><a href=\"#-%EB%8B%A4%EC%9D%8C-%ED%95%A0-%EC%9D%BC\" aria-label=\" 다음 할 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌 다음 할 일</h3>\n<p>다음에는 Yarn berry에 대해 조사해봐야 겠다…\r\n사전 조사로는 Yarn berry를 사용하여 zero install을 할 수 있다고 한다.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80%EB%9E%80\">📌 자바스크립트 패키지 매니저란?</a></p>\n</li>\n<li>\n<p><a href=\"#-npm-packagemanager\">📌 NPM PackageManager</a></p>\n</li>\n<li>\n<p><a href=\"#-yarn-packagemanager\">📌 Yarn PackageManager</a></p>\n</li>\n<li>\n<p><a href=\"#-%EA%B7%B8%EB%9E%98%EC%84%9C-npm%EA%B3%BC-yarn%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%B4-%EB%AD%90%EC%95%BC\">📌 그래서 Npm과 Yarn의 차이점이 뭐야??</a></p>\n<ul>\n<li><a href=\"#1-%EC%86%8D%EB%8F%84\">1. 속도</a></li>\n<li><a href=\"#2-%EA%B3%B5%EC%9C%A0%EC%84%B1\">2. 공유성</a></li>\n<li><a href=\"#3-%EB%B3%B4%EC%95%88%EC%84%B1\">3. 보안성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EA%B2%B0%EB%A1%A0%EC%9D%80-%EB%AD%94%EB%8D%B0\">그래서 결론은 뭔데???</a></p>\n</li>\n<li>\n<p><a href=\"#-%EB%8B%A4%EC%9D%8C-%ED%95%A0-%EC%9D%BC\">📌 다음 할 일</a></p>\n</li>\n</ul>","frontmatter":{"title":"NPM과 YARN 차이","category":"","created":"2023-06-19"}}},"pageContext":{"id":"3d927061-8182-5dac-a75f-ed9e638fbd14"}},"staticQueryHashes":[],"slicesMap":{}}